# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build OpenEVSE divert simulator

# Allow dependabot to update checks
permissions:
  checks: write
  actions: write
  contents: write
  issues: read
  pull-requests: write

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build and test divert_sim
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          path: OpenEVSE_WiFi

      - uses: actions/checkout@v4
        with:
          repository: JeremyPoulter/MicroDebug
          path: MicroDebug

      - uses: actions/checkout@v4
        with:
          repository: JeremyPoulter/MicroTasks
          path: MicroTasks

      - uses: actions/checkout@v4
        with:
          repository: JeremyPoulter/StreamSpy
          path: StreamSpy

      - uses: actions/checkout@v4
        with:
          repository: JeremyPoulter/ConfigJson
          path: ConfigJson

      - uses: actions/checkout@v4
        with:
          repository: bblanchon/ArduinoJson
          path: ArduinoJson
          ref: v6.20.1

      - uses: actions/checkout@v4
        with:
          repository: JeremyPoulter/OpenEVSE_Lib
          path: OpenEVSE_Lib

      - uses: actions/checkout@v4
        with:
          repository: JeremyPoulter/EpoxyDuino
          path: EpoxyDuino

      - uses: actions/checkout@v4
        with:
          repository: JeremyPoulter/ESPAL
          path: ESPAL

      - uses: ammaraskar/gcc-problem-matcher@master

      - name: Build the simulator
        run: |
          cd OpenEVSE_WiFi/divert_sim
          make -j

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: divert_sim
          path: OpenEVSE_WiFi/divert_sim/divert_sim

      - name: Set up Python 3.10
        uses: actions/setup-python@v6
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies

      - name: Install dependencies
        run: pip install -r OpenEVSE_WiFi/divert_sim/requirements.txt

      - name: run tests
        run: |
          cd OpenEVSE_WiFi/divert_sim
          mkdir -p output
          pytest -v --color=yes --code-highlight yes --junit-xml=output/test_results.xml

      - name : Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test_results
          path: |
            OpenEVSE_WiFi/divert_sim/output
            OpenEVSE_WiFi/divert_sim/view.html

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          junit_files: OpenEVSE_WiFi/divert_sim/output/*.xml
          check_name: Test Results
