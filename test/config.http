# Name: REST Client
# Id: humao.rest-client
# Description: REST Client for Visual Studio Code
# Version: 0.21.3
# Publisher: Huachao Mao
# VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=humao.rest-client

# You should use environment vars (https://marketplace.visualstudio.com/items?itemName=humao.rest-client#environment-variables) for these
# but you can also set here if needed (just don't check in!)

#@baseUrl = http://openevse.local

#@ssid = your_ssid
#@pass = your_password
#@apikey = your_key

###

GET {{baseUrl}}/config HTTP/1.1

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "emoncms_enabled": true,
  "emoncms_server": "http://emoncms.org",
  "emoncms_node": "openevse-a7d4",
  "emoncms_apikey": "{{apikey_emoncms}}",
  "emoncms_fingerprint": ""
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "emoncms_enabled": false
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "divert_enabled": true,
  "divert_attack_smoothing_time": 8,
  "divert_decay_smoothing_time": 300,
  "divert_min_charge_time": 20
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "divert_enabled": false
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "charge_mode": "fast"
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "charge_mode": "eco"
}

###
# Make connection to an MQTT server

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "mqtt_enabled": true,
  "mqtt_protocol": "mqtt",
  "mqtt_server": "home.lan",
  "mqtt_port": 1883,
  "mqtt_topic": "openevse",
  "mqtt_user": "emonpi",
  "mqtt_pass": "emonpimqtt2016",
  "mqtt_solar": "",
  "mqtt_grid_ie": "emon/test/grid_ie"
}

###
# Make connection to an MQTT server, bad host

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "mqtt_enabled": true,
  "mqtt_protocol": "mqtt",
  "mqtt_server": "example.com",
  "mqtt_port": 1883,
  "mqtt_topic": "openevse",
  "mqtt_user": "emonpi",
  "mqtt_pass": "emonpimqtt2016"
}

###
# Make connection to an MQTT server, bad username

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "mqtt_enabled": true,
  "mqtt_protocol": "mqtt",
  "mqtt_server": "home.lan",
  "mqtt_port": 1883,
  "mqtt_topic": "openevse",
  "mqtt_user": "xxxxxxxx",
  "mqtt_pass": "xxxxxxxx"
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "mqtt_enabled": false
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "mqtt_vehicle_soc": "vehicle/soc",
  "mqtt_vehicle_range": "vehicle/range",
  "mqtt_vehicle_eta": "vehicle/eta"
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "tesla_enabled": false
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "pause_uses_disabled": true
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "pause_uses_disabled": false
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "led_brightness": 255
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "led_brightness": 128
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "led_brightness": 32
}

###

# Set the soft current limit

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "max_current_soft": 16
}

###

# Configure the OpenEVSE checks

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "diode_check": true,
  "gfci_check": true,
  "ground_check": false,
  "relay_check": true,
  "vent_check": true,
  "temp_check": true
}

###

# Set the service level to auto

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "service": 0
}

###

# Set the service level to L1

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "service": 1
}

###

# Set the service level to L2

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "service": 2
}

###

# Set the ammeter settings

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "scale": 220,
  "offset": 0
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "ssid": "{{ssid}}",
  "pass": "{{pass}}"
}

###

# Set a factory username/password

POST {{baseUrl}}/config?factory=true HTTP/1.1
Content-Type: application/json
Authorization: Basic admin:admin
X-Storage: factory

{
  "www_username": "admin",
  "www_password": "admin"
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "time_zone": "<+07>-7"
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "max_current_hard": "16"
}

###

POST {{baseUrl}}/config HTTP/1.1
Content-Type: application/json

{
  "max_current_hard": "20"
}

